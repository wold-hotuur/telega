import telebot
from telebot import types

bot = telebot.TeleBot("6306663999:AAGjz35dixzp--6BOFSAxKqoCMkjsYHs5d4")

recommendations = [
    "–ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –†–∞—Å—Å–º–æ—Ç—Ä–∏–º –∫–∞–∫–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤–∞–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –∫–∞–∫ —Å–ª–µ–¥—É–µ—Ç –∏—Ö –∑–∞—â–∏—Ç–∏—Ç—å?",
    "–°–µ–≥–æ–¥–Ω—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–¥—É–º–∞—Ç—å –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö.",
    "–ó–∞—â–∏—Ç–∞ –ø–æ—á—Ç–æ–≤—ã—Ö —è—â–∏–∫–æ–≤. –ó–∞–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –ø–æ—á—Ç–æ–≤—ã–π —è—â–∏–∫, –¥–∞–ª–µ–µ ¬´–ù–∞—Å—Ç—Ä–æ–π–∫–∏¬ª, –¥–∞–ª–µ–µ ¬´–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å¬ª, –¥–∞–ª–µ–µ ¬´–°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å¬ª."
   
]


def display_recommendations(user_id, page):
    start_index = (page - 1) * 5
    end_index = min(start_index + 5, len(recommendations))
    for i in range(start_index, end_index):
        recommendation = recommendations[i]
       
        if is_completed(user_id, i + 1):
            bot.send_message(user_id, f"‚úÖ –î–µ–Ω—å {i + 1}. {recommendation}", parse_mode="Markdown")
        elif is_postponed(user_id, i + 1):
            bot.send_message(user_id, f"üî¥ –î–µ–Ω—å {i + 1}. {recommendation}", parse_mode="Markdown")
        else:
            bot.send_message(user_id, f"‚ö´Ô∏è –î–µ–Ω—å {i + 1}. {recommendation}", parse_mode="Markdown")


def is_completed(user_id, recommendation_number):
    pass

def is_postponed(user_id, recommendation_number):
    pass

@bot.message_handler(func=lambda message: True, content_types=['text'])
def view_recommendations(message):
    if message.text == "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏":
        display_recommendations(message.chat.id, 1)
        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
        markup.add(types.KeyboardButton("–ü–æ–∫–∞–∑–∞—Ç—å –¥–∞–ª–µ–µ‚Ä¶"))
        markup.add(types.KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"))
        markup.add(types.KeyboardButton("–ú–µ–Ω—é"))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

@bot.message_handler(func=lambda message: True, content_types=['text'])
def change_recommendation_status(message):
    if message.text == "–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è":
        bot.reply_to(message, "–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, —Å—Ç–∞—Ç—É—Å –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É.")

@bot.message_handler(func=lambda message: True, content_types=['text'])
def invite_friends(message):
    if message.text == "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π":
        pass

@bot.message_handler(func=lambda message: True, content_types=['text'])
def take_cyber_hygiene_test(message):
    if message.text == "–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –ø–æ —Ü–∏—Ñ—Ä–æ–≤–æ–π –≥–∏–≥–∏–µ–Ω–µ":
        pass

bot.polling()
